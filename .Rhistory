gnorm(mu, sigma, a = 41, b = mu + (mu - 41)) +
labs(
x = "Minutes",
title = "Our Guess for Lecture Duration Distribution"
) +
scale_x_continuous(breaks = c(42, 45, 48, 50, 52, 55, 58))
gnorm(mu, sigma, a = 41.9, b = 42.3) +
geom_norm_fill(mu, sigma, a = 41.9, b = 42) +
labs(
x = "Minutes",
title = "Model of Lecture Lengths",
y = "Some Really Low Probabilities"
)
# Calculation of the shaded left-tail probability
pnorm(42, mu, sigma)
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
source("../../scripts/ggprob.R")
# Write your code here!
mean_X = 15 * .2
# Write your code here!
mean_X = 15 * .2
mean_X
# Write your code here!
mean_X = 15 * .2
variance_X = mean_X(.8)
# Write your code here!
mean_X = 15 * .2
variance_X = mean_X * .8
# Write your code here!
mean_X = 15 * .2
variance_X = mean_X * .8
sd_X = sqrt(variance_X)
# Write your code here!
mean_X = 15 * .2
variance_X = mean_X * .8
sd_X = sqrt(variance_X)
mean_X
var_X
sd_X
# Write your code here!
mean_X = 15 * .2
var_X = mean_X * .8
sd_X = sqrt(variance_X)
mean_X
var_X
sd_X
# Write your code here!
#cumulative distribution function
p_X_geq_4 <- 1 - pbinom(3, size = 15, prob = 0.2)
p_X_geq_4
pbinom?
pbinom?
pbinom?
pbinom?
setwd("~/Documents/School/Stat240/Discussion/ds07")
?pbinom
# Write your code here!
n_values <- seq(2, 100, by = 2)  # n varies from 2 to 100 by twos
p <- 0.5
# Create an empty data frame
data <- data.frame(n = numeric(), p = numeric(), x = numeric(), mu = numeric(), prob = numeric())
# Fill the data frame
for (n in n_values) {
x <- n / 2
mu <- n * p  # mean of the distribution
prob <- dbinom(x, n, p)  # Probability P(X = x)
data <- rbind(data, data.frame(n = n, p = p, x = x, mu = mu, prob = prob))
}
# Show the first few rows
head(data)
n_values <- seq(2, 100, by = 2)
p <- 0.5
head(data)
n_values <- seq(2, 100, by = 2)
p <- 0.5
head(data)
n_values <- seq(2, 100, by = 2)
p <- 0.5
head(data)
n_values <- seq(2, 100, by = 2)
p <- 0.5
n_values <- seq(2, 100, by = 2)
p <- 0.5
data <- data.frame(n = numeric(), p = numeric(), x = numeric(), mu = numeric(), prob = numeric())
n_values = seq(2, 100, by = 2)
p = 0.5
x = n/2
mu = mean(n * p)
data <- data.frame(n = numeric(), p = numeric(), x = numeric(), mu = numeric(), prob = numeric())
n_values = seq(2, 100, by = 2)
p = 0.5
x = n/2
mu = mean(n * p)
prob = dbinom(x, n, p)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
source("../../scripts/ggprob.R")
commercials <- read_csv("../../data/superbowl_commercials.csv")
commercials <- read_csv("../../data/superbowl_commercials.csv")
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(TRUE,  TRUE),
n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
commercials <- read_csv("../../data/superbowl_commercials.csv")
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
source("../../scripts/ggprob.R")
commercials <- read_csv("../../data/superbowl_commercials.csv")
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
source("~/.active-rstudio-document", echo=TRUE)
commercials <- read_csv("../../data/superbowl_commercials.csv")
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
total_ads
total_funny_ads
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
prop_funny_ads = total_funny_ads / total_ads
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
prop_funny_ads = total_funny_ads / total_ads
conf_int = BinomCI(total_funny_ads, total_ads, conf.level = 0.99, method = "ac")
conf_int
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
prop_funny_ads = total_funny_ads / total_ads
conf_int = BinomCI(total_funny_ads, total_ads, conf.level = 0.99, method = "ac")
conf_int
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE,
fig.height = 3)
library(tidyverse)
source("../../scripts/ggprob.R")
commercials <- read_csv("../../data/superbowl_commercials.csv")
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
prop_funny_ads = total_funny_ads / total_ads
conf_int = BinomCI(total_funny_ads, total_ads, conf.level = 0.99, method = "ac")
conf_int
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
prop_funny_ads = total_funny_ads / total_ads
alpha <- 0.01
z <- qnorm(1 - alpha / 2)
n_adj <- total_ads + z^2
p_hat_adj <- (total_funny_ads + z^2 / 2) / n_adj
se_adj <- sqrt((p_hat_adj * (1 - p_hat_adj)) / n_adj)
ci_lower <- p_hat_adj - z * se_adj
ci_upper <- p_hat_adj + z * se_adj
# Combine results into a tibble for tidyverse output
results <- tibble(
proportion_funny_ads = total_funny_ads / total_ads,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Print results
results
# Write your code here!
funny_ads_proportion = commercials %>%
group_by(Brand) %>%
summarize(
total_funny_ads = sum(Funny == TRUE, na.rm = TRUE),
total_ads = n() ) %>%
mutate(proportion_funny_ads = total_funny_ads / total_ads)
funny_ads_proportion
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
x_adjusted <- total_funny_ads + 2
n_adjusted <- total_ads + 4
phat_ac <- x_adjusted / n_adjusted
se <- sqrt(phat_ac * (1 - phat_ac) / n_adjusted)
z <- qnorm(0.995)
ci_lower <- phat_ac - z * se
ci_upper <- phat_ac + z * se
list(
proportion_funny_ads = phat_ac,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
total_funny_ads = sum(commercials$Funny == TRUE, na.rm = TRUE)
total_ads = nrow(commercials)
x_adjusted = total_funny_ads + 2
n_adjusted = total_ads + 4
phat_ac = x_adjusted / n_adjusted
se = sqrt(phat_ac * (1 - phat_ac) / n_adjusted)
z = qnorm(0.995)
ci_lower = phat_ac - z * se
ci_upper = phat_ac + z * se
list(
proportion_funny_ads = phat_ac,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
p_null <- 0.5
phat <- total_funny_ads / total_ads
se_null <- sqrt(p_null * (1 - p_null) / total_ads)
test_stat <- (phat - p_null) / se_null
p_value <- 1 - pnorm(test_stat)
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
p_null = 0.5
phat = total_funny_ads / total_ads
se_null = sqrt(p_null * (1 - p_null) / total_ads)
test_stat = (phat - p_null) / se_null
p_value = 1 - pnorm(test_stat)
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
phat = 0.6877
p0 = 0.5
n = 249
alpha = 0.01
se_null = sqrt(p0 * (1 - p0) / n)
test_stat = (phat - p0) / se_null
p_value = 1 - pnorm(test_stat)
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
phat = 0.6877
p0 = 0.5
n = 249
alpha = 0.01
se_null = sqrt(p0 * (1 - p0) / n)
test_stat = (phat - p0) / se_null
p_value = 1 - pnorm(test_stat)
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
hyundai_ads <- commercials %>% filter(Brand == "Hyundai")
# Observed values
x_hyundai <- sum(hyundai_ads$Funny == TRUE, na.rm = TRUE) # Funny Hyundai ads
n_hyundai <- nrow(hyundai_ads) # Total Hyundai ads
phat_hyundai <- x_hyundai / n_hyundai # Proportion of funny Hyundai ads
# Null hypothesis proportion
p0 <- 0.5
# Test statistic
se_null <- sqrt(p0 * (1 - p0) / n_hyundai)
test_stat <- (phat_hyundai - p0) / se_null
# Two-sided p-value
p_value <- 2 * (1 - pnorm(abs(test_stat)))
# Write your code here!
hyundai_ads = commercials %>% filter(Brand == "Hyundai")
x_hyundai = sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai = nrow(hyundai_ads)
phat_hyundai = x_hyundai / n_hyundai
p0 = 0.5
se_null = sqrt(p0 * (1 - p0) / n_hyundai)
p_value = 2 * (1 - pnorm(abs(test_stat)))
# Write your code here!
hyundai_ads = commercials %>% filter(Brand == "Hyundai")
x_hyundai = sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai = nrow(hyundai_ads)
phat_hyundai = x_hyundai / n_hyundai
p0 = 0.5
se_null = sqrt(p0 * (1 - p0) / n_hyundai)
p_value = 2 * (1 - pnorm(abs(test_stat)))
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
hyundai_ads = commercials %>% filter(Brand == "Hyundai")
x_hyundai = sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai = nrow(hyundai_ads)
phat_hyundai = x_hyundai / n_hyundai
p0 = 0.5
se_null = sqrt(p0 * (1 - p0) / n_hyundai)
p_value = 2 * (1 - pnorm(abs(test_stat)))
list(
test_statistic = test_stat,
p_value = p_value
)
# Write your code here!
hyundai_ads <- commercials %>% filter(Brand == "Hyundai")
budweiser_ads <- commercials %>% filter(Brand == "Budweiser")
x_hyundai <- sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai <- nrow(hyundai_ads)
x_budweiser <- sum(budweiser_ads$Funny == TRUE, na.rm = TRUE)
n_budweiser <- nrow(budweiser_ads)
n_adj_hyundai <- n_hyundai + 2
n_adj_budweiser <- n_budweiser + 2
p_adj_hyundai <- (x_hyundai + 1) / n_adj_hyundai
p_adj_budweiser <- (x_budweiser + 1) / n_adj_budweiser
point_estimate <- p_adj_hyundai - p_adj_budweiser
se <- sqrt(
(p_adj_hyundai * (1 - p_adj_hyundai) / n_adj_hyundai) +
(p_adj_budweiser * (1 - p_adj_budweiser) / n_adj_budweiser)
)
z <- qnorm(0.975)
moe <- z * se
ci_lower <- point_estimate - moe
ci_upper <- point_estimate + moe
list(
point_estimate = point_estimate,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
hyundai_ads = commercials %>% filter(Brand == "Hyundai")
budweiser_ads = commercials %>% filter(Brand == "Budweiser")
x_hyundai = sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai = nrow(hyundai_ads)
x_budweiser = sum(budweiser_ads$Funny == TRUE, na.rm = TRUE)
n_budweiser = nrow(budweiser_ads)
n_adj_hyundai = n_hyundai + 2
n_adj_budweiser = n_budweiser + 2
p_adj_hyundai = (x_hyundai + 1) / n_adj_hyundai
p_adj_budweiser = (x_budweiser + 1) / n_adj_budweiser
point_estimate = p_adj_hyundai - p_adj_budweiser
se = sqrt(
(p_adj_hyundai * (1 - p_adj_hyundai) / n_adj_hyundai) +
(p_adj_budweiser * (1 - p_adj_budweiser) / n_adj_budweiser)
)
z = qnorm(0.975)
moe = z * se
ci_lower = point_estimate - moe
ci_upper = point_estimate + moe
list(
point_estimate = point_estimate,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
x_hyundai = sum(hyundai_ads$Funny == TRUE, na.rm = TRUE)
n_hyundai = nrow(hyundai_ads)
x_budweiser = sum(budweiser_ads$Funny == TRUE, na.rm = TRUE)
n_budweiser = nrow(budweiser_ads)
n_adj_hyundai = n_hyundai + 2
n_adj_budweiser = n_budweiser + 2
p_adj_hyundai = (x_hyundai + 1) / n_adj_hyundai
p_adj_budweiser = (x_budweiser + 1) / n_adj_budweiser
point_estimate = p_adj_hyundai - p_adj_budweiser
se = sqrt(
(p_adj_hyundai * (1 - p_adj_hyundai) / n_adj_hyundai) +
(p_adj_budweiser * (1 - p_adj_budweiser) / n_adj_budweiser)
)
z = qnorm(0.975)
moe = z * se
ci_lower = point_estimate - moe
ci_upper = point_estimate + moe
list(
point_estimate = point_estimate,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
point_estimate = p_adj_hyundai - p_adj_budweiser
se = sqrt(
(p_adj_hyundai * (1 - p_adj_hyundai) / n_adj_hyundai) +
(p_adj_budweiser * (1 - p_adj_budweiser) / n_adj_budweiser)
)
z = qnorm(0.975)
moe = z * se
ci_lower = point_estimate - moe
ci_upper = point_estimate + moe
list(
point_estimate = point_estimate,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
point_estimate = p_adj_hyundai - p_adj_budweiser
se = sqrt(
(p_adj_hyundai * (1 - p_adj_hyundai) / n_adj_hyundai) +
(p_adj_budweiser * (1 - p_adj_budweiser) / n_adj_budweiser)
)
z = qnorm(0.975)
moe = z * se
ci_lower = point_estimate - moe
ci_upper = point_estimate + moe
list(
point_estimate = point_estimate,
ci_lower = ci_lower,
ci_upper = ci_upper
)
# Write your code here!
phat_hyundai <- x_hyundai / n_hyundai
phat_budweiser <- x_budweiser / n_budweiser
# Pooled proportion
pooled_p <- (x_hyundai + x_budweiser) / (n_hyundai + n_budweiser)
# Standard error for difference in proportions
se <- sqrt(pooled_p * (1 - pooled_p) * (1 / n_hyundai + 1 / n_budweiser))
test_stat <- (phat_hyundai - phat_budweiser) / se
p_value <- 2 * (1 - pnorm(abs(test_stat)))
# Write your code here!
phat_hyundai <- x_hyundai / n_hyundai
phat_budweiser <- x_budweiser / n_budweiser
pooled_p <- (x_hyundai + x_budweiser) / (n_hyundai + n_budweiser)
se <- sqrt(pooled_p * (1 - pooled_p) * (1 / n_hyundai + 1 / n_budweiser))
test_stat <- (phat_hyundai - phat_budweiser) / se
p_value <- 2 * (1 - pnorm(abs(test_stat)))
p_value
git config --global user.name "anthonyjcthomas"
print("This is a test")
setwd("~/Documents/School/Stat240/Final Project")
print("This is a test")
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
boroughs <- read.csv("/Users/hollybrikowski/Desktop/STAT240/data/Projected_Population_2010-2040_-_Summary.csv")
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
boroughs <- read.csv("./data/Projected_Population_2010-2040_-_Summary.csv")
schools <- read.csv("./data/School_Quality_Reports_Data.csv")
boroughs <- read.csv("../data/Projected_Population_2010-2040_-_Summary.csv")
boroughs <- read.csv("../data/Projected_Population_2010-2040_-_Summary.csv")
boroughs <- read.csv("../data/Projected_Population_2010-2040_-_Summary.csv")
setwd("~/Documents/School/Stat240/Final Project")
boroughs <- read.csv("../data/Projected_Population_2010-2040_-_Summary.csv")
schools <- read.csv("../data/School_Quality_Reports_Data.csv")
schools <- read.csv("../data/School_Quality_Reports_Data.csv")
boroughs <- read.csv("../data/Projected_Population_2010-2040_-_Summary.csv")
schools <- read.csv("../data/School_Quality_Reports_Data.csv")
new_school <- schools %>%
drop_na() %>%
filter(School.Year >= "2020")
new_school <- schools %>%
drop_na() %>%
filter(School.Year >= "2020")
